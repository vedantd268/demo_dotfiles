import React, { useState, useEffect } from 'react';
import { Loader, Card, Formfile } from '../components';

const Home = () => {
  const [loading, setloading] = useState(false);
  const [allpost, setallpost] = useState(null);
  const [search, setsearch] = useState('');
  const [searchresult, setsearchresult] = useState(null);
  const [searchtimeout, setsearchtimeout] = useState(null);



  const handlesearchchange = (e) => {
    clearTimeout(searchtimeout);
    setsearch(e.target.value);

    setsearchtimeout(
      setTimeout(() => {
        const searchresult = allpost.filter((item) => item.name.toLowerCase().includes(search.toLowerCase()) || item.prompt.toLowerCase().includes(search.toLowerCase()));
        setsearchresult(searchresult)
      }, 500));
  }


  const fetchPosts = async () => {
    setloading(true);

    try {
      const response = await fetch('http://localhost:8080/api/v1/post', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (response.ok) {
        const result = await response.json();
        console.log(result.data);
        setallpost(result.data.reverse());
      }
    } catch (err) {
      alert(err);
    } finally {
      setloading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  const RenderCard = ({ data, title }) => {
    if (data?.length > 0) {
      return (
        data.map((post) => <Card key={post._id} {...post} />)
      );
    }
    return (
      <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
    );
  }

  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className="font-extrabold text-[#222328] dark:text-gray-200 text-[32px]">the Community Showcase</h1>
        <p className='mt-2 text-[#666e75] text[16px] max-w[500px]'>Browers through a imaginatiation and visully stunning images generated by My AI</p>
      </div>
      <div className='mt-16'>
        <Formfile
          LabelName="Search Post"
          type="text"
          name="text"
          placeholder="Search Post"
          value={search}
          handleChange={handlesearchchange}
          ispresent={true}
        />
      </div>
      <div className='mt-10'>
        {loading ? (
          <div className='flex justify-center items-center'>
            <Loader />
          </div>
        ) : (
          <>
            {
              search && (
                <h2 className='font-medium text-xl mb-3 dark:text-gray-200'>
                  {"Showing results for "}
                  <span className='text-[#222328] dark:text-gray-400'>{search}</span></h2>)
            }
            <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
              {search ? (
                <RenderCard data={searchresult} title="No search results found" />
              ) : (
                <RenderCard data={allpost} title="No post found" />
              )
              }
            </div>
          </>
        )}
      </div>
    </section>
  )
}

export default Home;
